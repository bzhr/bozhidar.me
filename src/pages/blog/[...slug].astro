---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map(post => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content } = await post.render();

const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
	year: 'numeric',
	month: 'long',
	day: 'numeric'
});
---

<Layout title={post.data.title}>
	<article class="blog-post">
		<header>
			<time datetime={post.data.pubDate.toISOString()}>{formattedDate}</time>
			<h1>{post.data.title}</h1>
			{post.data.tags.length > 0 && (
				<div class="tags">
					{post.data.tags.map(tag => (
						<span class="tag">#{tag}</span>
					))}
				</div>
			)}
		</header>
		<Content />
	</article>
</Layout>

<style>
	.blog-post {
		max-width: 100%;
	}
	header {
		margin-bottom: 2.5rem;
	}
	time {
		color: var(--text-secondary);
	}
	h1 {
		margin: 0.5rem 0 1rem;
		font-size: 2.5rem;
	}
	.tags {
		display: flex;
		gap: 0.5rem;
		margin-top: 1rem;
	}
	.tag {
		color: var(--text-secondary);
		font-size: 0.9rem;
	}
	article :global(h2) {
		font-size: 1.8rem;
		margin: 2rem 0 1rem;
	}
	article :global(p) {
		margin: 1.2rem 0;
	}
	article :global(ul), article :global(ol) {
		margin: 1rem 0;
		padding-left: 1.5rem;
	}
	article :global(pre) {
		background: #f6f8fa;
		padding: 1rem;
		border-radius: 4px;
		overflow-x: auto;
		font-size: 0.9rem;
	}
	article :global(code) {
		background: #f6f8fa;
		padding: 0.2em 0.4em;
		border-radius: 3px;
		font-size: 0.9em;
	}
	article :global(pre code) {
		background: none;
		padding: 0;
	}
</style>